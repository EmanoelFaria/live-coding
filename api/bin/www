if(!process.env.NODE_ENV){
  let msg = "ERROR: SERVER RUNNING WITHOUT NODE_ENV CONFIG!"
  console.info(msg);
  throw new Error(msg)
}

const dotenv = require('dotenv');
const operation = dotenv.config({ path: `${__dirname}/../.env.${process.env.NODE_ENV}` });

if (operation.error) {
  throw new Error(`Verify that .env file exists in the env folder and if the file format is equal to env/.env.example`);
}

var app = require('../app');
var http = require('http');

var port = normalizePort(process.env.WEBSERVER_PORT);
app.set('port', port);

var server = http.createServer(app);


server.listen(port);
server.on('error', onError);
server.on('listening', onListening);


function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  console.log('Listening on ' + bind);
}

module.exports = server
